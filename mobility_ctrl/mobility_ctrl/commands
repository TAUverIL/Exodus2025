Spawning the rover and running control nodes:
* Running launch file and spawning rover:  ros2 launch nav2_stanley ack_bringup.launch.py
* Running initial control node:  ros2 run gazebo_ackermann_control control_node
* Teleop command: ros2 run teleop_twist_keyboard teleop_twist_keyboard

Creating SDF:
* Xacro -> URDF conversion:  xacro ack_rover.xacro.urdf > ack_rover.urdf
* URDF -> SDF conversion:  ign sdf -p ack_rover.urdf > ack_rover.sdf

ROS2 topics:
* List current topics: ros2 topic list
* Echo to screen: ros2 topic echo /topic_name

IGN topics:
* List ignition topics: ign topic -l
* Echo to screen: ign -e -t /topic_name

Check transforms:
* Create TF tree (saves PDF in current location): ros2 run tf2_tools view_frames
* Verify transform exists between two TFs (for example, using map and odom TFs): ros2 run tf2_ros tf2_echo map odom 

General:
* Format for package creation with NAV2:  ros2 pkg create <package_name> --build-type ament_python --dependencies rclpy geometry_msgs rviz2 robot_localization ros_gs_bridge ros_gz_sim nav2_bringup nav2_map_server nav2_lifecycle_manager tf2_ros
* Make python file executable: chmod +x <filename>.py

File locations:
* All packages installed with sudo apt install: /opt/ros/humble/lib
* Package contents: /opt/ros/humble/share
* Gazebo worlds: /usr/share/ignition/ignition-gazebo6/worlds/

GIT commands:
* Check which branch we're in (and which files have changed): git status
* Checkout a branch: git checkout branch_name
* Create and checkout branch: git checkout -b new_branch_name
* Add to tracked items: git add .
* Commit to branch: git commit -m "description" .
* Push to remote branch: git push origin branch_name
* Pull from remote branch: git pull origin branch_name
